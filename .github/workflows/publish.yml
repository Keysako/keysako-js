name: Publish Package

on:
  push:
    tags:
      - 'v*' # DÃ©clenche sur les tags qui commencent par 'v'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Get version
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          MAJOR_VERSION=$(echo $VERSION | cut -d. -f1)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "MAJOR_VERSION=$MAJOR_VERSION" >> $GITHUB_OUTPUT
      
      - name: Create Release Notes
        id: release_notes
        run: |
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "## Keysako Identity v${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "### Installation" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "#### NPM" >> $GITHUB_ENV
          echo "\`\`\`bash" >> $GITHUB_ENV
          echo "npm install keysako-identity@${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_ENV
          echo "\`\`\`" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "#### CDN" >> $GITHUB_ENV
          echo "\`\`\`html" >> $GITHUB_ENV
          echo "<script" >> $GITHUB_ENV
          echo "    src=\"https://cdn.keysako.com/v${{ steps.get_version.outputs.MAJOR_VERSION }}/keysako-connect.min.js\"" >> $GITHUB_ENV
          echo "    integrity=\"sha384-${{ env.CDN_HASH }}\"" >> $GITHUB_ENV
          echo "    crossorigin=\"anonymous\"></script>" >> $GITHUB_ENV
          echo "\`\`\`" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "### Checksums" >> $GITHUB_ENV
          echo "File hashes for integrity verification:" >> $GITHUB_ENV
          echo "" >> $GITHUB_ENV
          echo "\`\`\`" >> $GITHUB_ENV
          cat dist/v${{ steps.get_version.outputs.MAJOR_VERSION }}/checksums.txt >> $GITHUB_ENV
          echo "\`\`\`" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          files: |
            dist/v${{ steps.get_version.outputs.MAJOR_VERSION }}/keysako-connect-${{ steps.get_version.outputs.VERSION }}.min.js
            dist/v${{ steps.get_version.outputs.MAJOR_VERSION }}/keysako-connect-${{ steps.get_version.outputs.VERSION }}.min.js.map
            dist/v${{ steps.get_version.outputs.MAJOR_VERSION }}/keysako-connect-${{ steps.get_version.outputs.VERSION }}.esm.js
            dist/v${{ steps.get_version.outputs.MAJOR_VERSION }}/keysako-connect-${{ steps.get_version.outputs.VERSION }}.esm.js.map
            dist/v${{ steps.get_version.outputs.MAJOR_VERSION }}/keysako-connect.min.js
            dist/v${{ steps.get_version.outputs.MAJOR_VERSION }}/keysako-connect.min.js.map
            dist/v${{ steps.get_version.outputs.MAJOR_VERSION }}/keysako-connect.esm.js
            dist/v${{ steps.get_version.outputs.MAJOR_VERSION }}/keysako-connect.esm.js.map
            dist/v${{ steps.get_version.outputs.MAJOR_VERSION }}/checksums.txt
          body: ${{ env.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "dist"
          skip_app_build: true
          skip_api_build: true
